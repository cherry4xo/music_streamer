.minikube-template:
  tags:
    - firstvds
  before_script:
    - set -e
    - |
      if ! minikube status -p $MINIKUBE_PROFILE | grep -q "Running"; then
        minikube start --memory=6656 --cpus=4 --driver=docker -p $MINIKUBE_PROFILE --wait=all
      fi
    - minikube update-context -p $MINIKUBE_PROFILE

    - |
      echo "Waiting for Kubernetes API server..."
      until kubectl get po &> /dev/null; do
        sleep 1
      done
      echo "Kubernetes API server is running"

load_images:
  extends: .minikube-template
  stage: load-images
  image: docker:latest
  services:
    - docker:dind
  script:
    - echo "Logging into GitLab registry..."
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - echo "Pulling images from registry..."
    - docker pull $CI_REGISTRY/$CI_PROJECT_PATH/users-auth:$CI_COMMIT_SHA
    - docker pull $CI_REGISTRY/$CI_PROJECT_PATH/users-account:$CI_COMMIT_SHA
    - echo "Loading images into Minikube..."
    - minikube image load $CI_REGISTRY/$CI_PROJECT_PATH/users-auth:$CI_COMMIT_SHA
    - minikube image load $CI_REGISTRY/$CI_PROJECT_PATH/users-account:$CI_COMMIT_SHA
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

.terraform-template:
  extends: .minikube-template
  image: 
    name: registry.gitlab.com/gitlab-org/terraform-images/terraform:latest
    entrypoint: [""]
  tags:
    - firstvds
  before_script:
    - set -e

    - cd ${TF_ROOT}

    - git clone https://github.com/hashicorp/vault-helm.git --depth 1

    - export TF_HTTP_USERNAME="gitlab-ci-token"
    - export TF_HTTP_PASSWORD="${CI_JOB_TOKEN}"

    - export GITLAB_TF_ADDRESS=${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/terraform/state/${TF_STATE_NAME}
    - |
      terraform init -reconfigure -upgrade \
        -backend-config="address=${GITLAB_TF_ADDRESS}" \
        -backend-config="lock_address=${GITLAB_TF_ADDRESS}/lock" \
        -backend-config="unlock_address=${GITLAB_TF_ADDRESS}/lock" \
        -backend-config="lock_method=POST" \
        -backend-config="unlock_method=DELETE" \
        -backend-config="retry_wait_min=5"

    - |
      if [[ "$CI_JOB_STAGE" == "apply-apps" ]]; then
        export VAULT_ADDR=$(minikube service vault -p $MINIKUBE_PROFILE --url)
        echo "Terraform will use vault at: $VAULT_ADDR"
      else
        echo "Skipping vault address port for plan/validate stage"
      fi
    - export VAULT_TOKEN="root"

apply_platform:
  extends: .terraform-template
  stage: apply-platform
  script:
    - echo "Applying platform services"
    - terraform apply -auto-approve -target=helm_release.vault
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: manual

apply_apps:
  extends: .terraform-template
  stage: apply-apps
  script:
    - echo "Applying application services"
    - terraform apply -input=false "plan.tfplan"
  dependencies:
    - plan_for_master_terraform
  needs: ["apply-platform", "load-images"]
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    
validate_terraform:
  extends: .terraform-template
  stage: validate
  script:
    - terraform validate

plan_for_merge_request_terraform:
  extends: .terraform-template
  stage: plan
  script:
    - terraform plan
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

plan_for_master_terraform:
  extends: .terraform-template
  stage: plan
  script:
    - terraform plan -out="plan.tfplan"
  artifacts:
    name: "plan"
    paths:
      - "${TF_ROOT}/plan.tfplan"
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
